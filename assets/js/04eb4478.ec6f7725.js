"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9960],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=l(n),m=a,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[c]="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6426:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:5},i="HTTP Server",s={unversionedId:"graphcast/radios/subgraph-radio/http-server",id:"graphcast/radios/subgraph-radio/http-server",title:"HTTP Server",description:"The Radio spins up an HTTP server with a GraphQL API when SERVERHOST and SERVERPORT environment variables are set. The supported routes are:",source:"@site/docs/graphcast/radios/subgraph-radio/http-server.md",sourceDirName:"graphcast/radios/subgraph-radio",slug:"/graphcast/radios/subgraph-radio/http-server",permalink:"/graphcast/radios/subgraph-radio/http-server",draft:!1,editUrl:"https://github.com/graphops/docs/edit/main/docs/graphcast/radios/subgraph-radio/http-server.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"gnSidebar",previous:{title:"Advanced Configuration",permalink:"/graphcast/radios/subgraph-radio/advanced-configuration"},next:{title:"Graphcast CLI",permalink:"/graphcast/radios/graphcast-cli"}},p={},l=[],u={toc:l},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"http-server"},"HTTP Server"),(0,a.kt)("p",null,"The Radio spins up an HTTP server with a GraphQL API when ",(0,a.kt)("inlineCode",{parentName:"p"},"SERVER_HOST")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"SERVER_PORT")," environment variables are set. The supported routes are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/health")," for health status"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"/api/v1/graphql")," for GET and POST requests with GraphQL playground interface")),(0,a.kt)("p",null,"The GraphQL API now includes several advanced queries:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"radioPayloadMessages")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"localAttestations")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"upgradeIntentMessages")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"comparisonResults")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"comparisonRatio"))),(0,a.kt)("p",null,"Below are some example queries:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'query {\n  radioPayloadMessages {\n    identifier\n    nonce\n    signature\n    graphAccount\n    payload {\n      identifier\n      content\n    }\n  }\n  localAttestations {\n    deployment\n    blockNumber\n    attestation {\n      ppoi\n    }\n  }\n  comparisonResults(identifier: "Qm...") {\n    deployment\n    blockNumber\n    resultType\n    localAttestation {\n      ppoi\n    }\n    attestations {\n      senders\n      stakeWeight\n      ppoi\n    }\n  }\n  comparisonRatio {\n    deployment\n    blockNumber\n    stakeRatio\n  }\n  upgradeIntentMessages {\n    subgraphId\n    newHash\n    nonce\n    graphAccount\n  }\n}\n')),(0,a.kt)("p",null,"You can customize the returned data from the ",(0,a.kt)("inlineCode",{parentName:"p"},"comparisonRatio")," query by providing optional arguments - ",(0,a.kt)("inlineCode",{parentName:"p"},"deployment"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"block")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"resultType"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-graphql"},'query {\n  comparisonRatio(deployment: "Qm...", block: 17887350, resultType: MATCH) {\n    deployment\n    blockNumber\n    stakeRatio\n  }\n}\n')),(0,a.kt)("p",null,"In this example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"stakeRatio"),' query will return the stake ratios only for attestations from deployment "Qm..." and block number 17887350, and only for the specified result type.'),(0,a.kt)("p",null,"Note: The ",(0,a.kt)("inlineCode",{parentName:"p"},"result_type")," field of the filter corresponds to the ",(0,a.kt)("inlineCode",{parentName:"p"},"resultType")," field in the ",(0,a.kt)("inlineCode",{parentName:"p"},"comparisonResults")," query. This field represents the type of comparison result."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stakeRatio")," orders the attestations by stake weight, then computes the ratio of unique senders."),(0,a.kt)("p",null,"To understand more about the format of the ratio results, check out ",(0,a.kt)("a",{parentName:"p",href:"#poi-comparison-results"},"this section"),"."),(0,a.kt)("p",null,"These queries provide a clear aggregation of the attestations from remote messages, giving a concise understanding of the Radio's state. The optional filters - deployment, block, and filter - can be used to refine the results."))}d.isMDXComponent=!0}}]);