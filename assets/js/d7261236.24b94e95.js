"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[330],{1721:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>h});var i=n(4848),a=n(8453);const s={sidebar_position:1},o="Introduction",t={id:"graphcast/radios/subgraph-radio/intro",title:"Introduction",description:"Subgraph Radio",source:"@site/docs/graphcast/radios/subgraph-radio/intro.md",sourceDirName:"graphcast/radios/subgraph-radio",slug:"/graphcast/radios/subgraph-radio/intro",permalink:"/graphcast/radios/subgraph-radio/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/graphops/docs/edit/main/docs/graphcast/radios/subgraph-radio/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"gnSidebar",previous:{title:"Registry Contract",permalink:"/graphcast/sdk/registry"},next:{title:"POI Cross-checking",permalink:"/graphcast/radios/subgraph-radio/poi-cross-checking"}},d={},h=[{value:"Subgraph Radio",id:"subgraph-radio",level:2},{value:"Basic Configuration",id:"basic-configuration",level:3},{value:"Run with Docker",id:"run-with-docker",level:3},{value:"(or) Run with docker-compose",id:"or-run-with-docker-compose",level:3},{value:"(or) Run as part of StakeSquid&#39;s docker-compose setup",id:"or-run-as-part-of-stakesquids-docker-compose-setup",level:3},{value:"(or) Run using a pre-built binary",id:"or-run-using-a-pre-built-binary",level:3},{value:"Developing the Subgraph Radio",id:"developing-the-subgraph-radio",level:2},{value:"Building the image using the Dockerfile locally",id:"building-the-image-using-the-dockerfile-locally",level:4},{value:"Prerequisites",id:"prerequisites",level:5},{value:"Running the Subgraph Radio inside a Docker container",id:"running-the-subgraph-radio-inside-a-docker-container",level:5},{value:"Building Subgraph Radio locally",id:"building-subgraph-radio-locally",level:3},{value:"Prerequisites",id:"prerequisites-1",level:4},{value:"Running the Subgraph Radio natively",id:"running-the-subgraph-radio-natively",level:4}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"introduction",children:"Introduction"})}),"\n",(0,i.jsx)(r.h2,{id:"subgraph-radio",children:"Subgraph Radio"}),"\n",(0,i.jsx)(r.p,{children:"Subgraph Radio is an optional component of the Graph Protocol Indexer Stack. It uses the Graphcast Network to facilitate the exchange of data among Indexers and other participants about Subgraphs."}),"\n",(0,i.jsxs)(r.p,{children:["The source code for the Subgraph Radio is available ",(0,i.jsx)(r.a,{href:"https://github.com/graphops/subgraph-radio",children:"on GitHub"})," and Docker builds are automatically published as ",(0,i.jsx)(r.a,{href:"https://github.com/graphops/subgraph-radio/pkgs/container/subgraph-radio",children:"GitHub Packages"}),". Subgraph Radio is also published as a crate ",(0,i.jsx)(r.a,{href:"https://crates.io/crates/subgraph-radio",children:"on crates.io"}),"."]}),"\n",(0,i.jsx)(r.h3,{id:"basic-configuration",children:"Basic Configuration"}),"\n",(0,i.jsxs)(r.p,{children:["The Subgraph Radio can be configured using environment variables, CLI arguments, as well as a ",(0,i.jsx)(r.code,{children:".toml"})," or ",(0,i.jsx)(r.code,{children:".yaml"})," configuration file. Take a look at the ",(0,i.jsx)(r.a,{href:"#configuration-options",children:"configuration options"})," to learn more. In all cases, users will need to prepare the following configuration variables:"]}),"\n",(0,i.jsxs)(r.table,{children:[(0,i.jsx)(r.thead,{children:(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.th,{children:"Name"}),(0,i.jsx)(r.th,{children:"Description and examples"})]})}),(0,i.jsxs)(r.tbody,{children:[(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"PRIVATE_KEY"})}),(0,i.jsxs)(r.td,{children:["Private key of the Graphcast ID wallet or the Indexer Operator wallet (precendence over ",(0,i.jsx)(r.code,{children:"MNEMONIC"}),").",(0,i.jsx)("br",{}),"Example: ",(0,i.jsx)(r.code,{children:"0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"INDEXER_ADDRESS"})}),(0,i.jsxs)(r.td,{children:["Indexer address for Graphcast message verification, in all lowercase.",(0,i.jsx)("br",{}),"Example: ",(0,i.jsx)(r.code,{children:"0xabcdcabdabcdabcdcabdabcdabcdcabdabcdabcd"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"GRAPH_NODE_STATUS_ENDPOINT"})}),(0,i.jsxs)(r.td,{children:["URL to a Graph Node Indexing Status endpoint.",(0,i.jsx)("br",{}),"Example: ",(0,i.jsx)(r.code,{children:"http://index-node:8030/graphql"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"INDEXER_MANAGEMENT_SERVER_ENDPOINT"})}),(0,i.jsxs)(r.td,{children:["URL to the Indexer management server of Indexer Agent. Example: ",(0,i.jsx)(r.code,{children:"http://localhost:18000"})]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"REGISTRY_SUBGRAPH"})}),(0,i.jsxs)(r.td,{children:["URL to the Graphcast Registry subgraph for your network. Check ",(0,i.jsx)(r.a,{href:"../../sdk/registry#subgraph-apis",children:"APIs"})," for your preferred network"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"NETWORK_SUBGRAPH"})}),(0,i.jsxs)(r.td,{children:["URL to the Graph Network subgraph. Check ",(0,i.jsx)(r.a,{href:"../../sdk/registry#subgraph-apis",children:"APIs"})," for your preferred network"]})]}),(0,i.jsxs)(r.tr,{children:[(0,i.jsx)(r.td,{children:(0,i.jsx)(r.code,{children:"GRAPHCAST_NETWORK"})}),(0,i.jsxs)(r.td,{children:["The Graphcast Messaging fleet and pubsub namespace to use.",(0,i.jsx)("br",{}),"Mainnet: ",(0,i.jsx)(r.code,{children:"mainnet"}),(0,i.jsx)("br",{}),"Goerli: ",(0,i.jsx)(r.code,{children:"testnet"})]})]})]})]}),"\n",(0,i.jsx)(r.h3,{id:"run-with-docker",children:"Run with Docker"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsx)(r.li,{children:"Pull the Subgraph Radio image"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"docker pull ghcr.io/graphops/subgraph-radio:latest\n"})}),"\n",(0,i.jsxs)(r.ol,{start:"2",children:["\n",(0,i.jsx)(r.li,{children:"Run the image, providing the required environment variables. Here's a sample mainnet configuration:"}),"\n"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:'docker run \\\n    -e GRAPHCAST_NETWORK="mainnet" \\\n    -e REGISTRY_SUBGRAPH="https://api.thegraph.com/subgraphs/name/hopeyen/graphcast-registry-mainnet" \\\n    -e NETWORK_SUBGRAPH="https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet" \\\n    -e PRIVATE_KEY="PRIVATE_KEY" \\\n    -e GRAPH_NODE_STATUS_ENDPOINT="http://graph-node:8030/graphql" \\\n    -e RUST_LOG="warn,hyper=warn,graphcast_sdk=info,subgraph_radio=info" \\\n    -e INDEXER_ADDRESS="INDEXER_ADDRESS" \\\n    ghcr.io/graphops/subgraph-radio:latest\n'})}),"\n",(0,i.jsx)(r.h3,{id:"or-run-with-docker-compose",children:"(or) Run with docker-compose"}),"\n",(0,i.jsxs)(r.p,{children:["You can append this service definition to your ",(0,i.jsx)(r.code,{children:"docker-compose"})," manifest and customise the definitions:"]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-yaml",children:'services:\n  # ... your other service definitions\n  subgraph-radio:\n    image: ghcr.io/graphops/subgraph-radio:latest\n    container_name: subgraph-radio\n    restart: unless-stopped\n    environment:\n      GRAPHCAST_NETWORK: "mainnet"\n      REGISTRY_SUBGRAPH: "https://api.thegraph.com/subgraphs/name/hopeyen/graphcast-registry-mainnet"\n      NETWORK_SUBGRAPH: "https://api.thegraph.com/subgraphs/name/graphprotocol/graph-network-mainnet"\n      PRIVATE_KEY: "PRIVATE_KEY"\n      GRAPH_NODE_STATUS_ENDPOINT: "http://graph-node:8030/graphql"\n      RUST_LOG: "warn,hyper=warn,graphcast_sdk=info,subgraph_radio=info"\n      INDEXER_ADDRESS: "INDEXER_ADDRESS"\n    logging:\n      driver: local\n'})}),"\n",(0,i.jsxs)(r.h3,{id:"or-run-as-part-of-stakesquids-docker-compose-setup",children:["(or) Run as part of ",(0,i.jsx)(r.a,{href:"https://github.com/StakeSquid",children:"StakeSquid"}),"'s docker-compose setup"]}),"\n",(0,i.jsxs)(r.p,{children:["Subgraph Radio is included as an optional component in both the ",(0,i.jsx)(r.a,{href:"https://github.com/StakeSquid/graphprotocol-mainnet-docker",children:"mainnet"})," and ",(0,i.jsx)(r.a,{href:"https://github.com/StakeSquid/graphprotocol-testnet-docker",children:"testnet"})," versions of StakeSquid's guide."]}),"\n",(0,i.jsx)(r.h3,{id:"or-run-using-a-pre-built-binary",children:"(or) Run using a pre-built binary"}),"\n",(0,i.jsxs)(r.p,{children:["We also provide pre-built binaries for Ubuntu and MacOS, which you can find in the ",(0,i.jsx)(r.code,{children:"Assets"})," section on each release in the ",(0,i.jsx)(r.a,{href:"https://github.com/graphops/subgraph-radio/releases",children:"releases page"})," on Github. Simply download the binary, make it executable (",(0,i.jsx)(r.code,{children:"chmod a+x ./subgraph-radio-{TAG}-{SYSTEM}"}),") and then run it (using ",(0,i.jsx)(r.code,{children:"./subgraph-radio-{TAG}-{SYSTEM}"}),")."]}),"\n",(0,i.jsx)(r.h2,{id:"developing-the-subgraph-radio",children:"Developing the Subgraph Radio"}),"\n",(0,i.jsx)(r.h4,{id:"building-the-image-using-the-dockerfile-locally",children:"Building the image using the Dockerfile locally"}),"\n",(0,i.jsx)(r.p,{children:"If you want to make any changes to the Subgraph Radio codebase, you can use this option."}),"\n",(0,i.jsx)(r.h5,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:["Clone this repo and ",(0,i.jsx)(r.code,{children:"cd"})," into it"]}),"\n",(0,i.jsxs)(r.li,{children:["Create a ",(0,i.jsx)(r.code,{children:".env"})," file that includes at least the required environment variables. To see the full list of environment variables you can provide, check out the ",(0,i.jsx)(r.a,{href:"#configuration",children:"Configuration"})," section."]}),"\n"]}),"\n",(0,i.jsx)(r.h5,{id:"running-the-subgraph-radio-inside-a-docker-container",children:"Running the Subgraph Radio inside a Docker container"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,i.jsx)(r.h3,{id:"building-subgraph-radio-locally",children:"Building Subgraph Radio locally"}),"\n",(0,i.jsx)(r.p,{children:"To have full control over the Subgraph Radio code and run it directly on your machine (without Docker) you can use this option."}),"\n",(0,i.jsx)(r.h4,{id:"prerequisites-1",children:"Prerequisites"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:["Clone this repo and ",(0,i.jsx)(r.code,{children:"cd"})," into it"]}),"\n",(0,i.jsx)(r.li,{children:"Make sure you have the following installed:"}),"\n"]}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://www.rust-lang.org/tools/install",children:"Rust"})}),"\n",(0,i.jsx)(r.li,{children:(0,i.jsx)(r.a,{href:"https://go.dev/doc/install",children:"Go"})}),"\n",(0,i.jsxs)(r.li,{children:["Build tools (e.g. the ",(0,i.jsx)(r.code,{children:"build-essentials"})," package for Debian-based Linux distributions or ",(0,i.jsx)(r.a,{href:"https://mac.install.guide/commandlinetools/index.html",children:"Xcode Command Line Tools"})," for MacOS)"]}),"\n",(0,i.jsxs)(r.li,{children:["C compiler (e.g. the ",(0,i.jsx)(r.code,{children:"clang"})," package for Debian-based Linux distribution or ",(0,i.jsx)(r.a,{href:"https://mac.install.guide/commandlinetools/index.html",children:"Xcode Command Line Tools"})," for MacOS)"]}),"\n",(0,i.jsxs)(r.li,{children:["OpenSSL (e.g. the ",(0,i.jsx)(r.code,{children:"libssl-dev"})," package for Debian-based Linux distribution or ",(0,i.jsx)(r.code,{children:"openssl"})," for MacOS)"]}),"\n",(0,i.jsxs)(r.li,{children:["PostreSQL libraries and headers (e.g. the ",(0,i.jsx)(r.code,{children:"libpq-dev"})," package for Debian-based Linux distribution or ",(0,i.jsx)(r.code,{children:"postgresql"})," for MacOS)"]}),"\n"]}),"\n",(0,i.jsxs)(r.ol,{start:"3",children:["\n",(0,i.jsxs)(r.li,{children:["You have ",(0,i.jsx)(r.strong,{children:"Graph Node"})," syncing your indexer's on-chain allocations."]}),"\n",(0,i.jsxs)(r.li,{children:["You have created a ",(0,i.jsx)(r.code,{children:".env"})," file that includes at least the required environment variables. To see the full list of environment variables you can provide, check out the ",(0,i.jsx)(r.a,{href:"#configuration",children:"Configuration"})," section."]}),"\n"]}),"\n",(0,i.jsx)(r.h4,{id:"running-the-subgraph-radio-natively",children:"Running the Subgraph Radio natively"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"cargo run --release\n"})})]})}function l(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>t});var i=n(6540);const a={},s=i.createContext(a);function o(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);