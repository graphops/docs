"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[338],{7052:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=a(4848),t=a(8453);const r={sidebar_position:3},i="Release Channels",o={id:"launchpad/release-channels",title:"Release Channels",description:"Due to the intricate nature of managing indexing operations for multiple blockchains and their associated dependencies, the Launchpad project is a complex system with numerous interdependencies.",source:"@site/docs/launchpad/release-channels.md",sourceDirName:"launchpad",slug:"/launchpad/release-channels",permalink:"/launchpad/release-channels",draft:!1,unlisted:!1,editUrl:"https://github.com/graphops/docs/edit/main/docs/launchpad/release-channels.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"launchpadSidebar",previous:{title:"Quick Start",permalink:"/launchpad/quick-start"},next:{title:"Supported Namespaces",permalink:"/launchpad/supported-namespaces"}},c={},l=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",header:"header",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"release-channels",children:"Release Channels"})}),"\n",(0,s.jsx)(n.p,{children:"Due to the intricate nature of managing indexing operations for multiple blockchains and their associated dependencies, the Launchpad project is a complex system with numerous interdependencies."}),"\n",(0,s.jsxs)(n.p,{children:["For a reminder of the various components within Launchpad and their intricate connections, we recommend revisiting our ",(0,s.jsx)(n.a,{href:"/launchpad/intro",children:"Intro"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This guide offers a comprehensive walkthrough, outlining the steps, automated and manual, required to introduce a new version release of an application, ie. Erigon, into the ",(0,s.jsx)(n.code,{children:"launchpad-charts"})," repository as a ",(0,s.jsx)(n.strong,{children:"canary"})," release and ultimately transitioning it to a ",(0,s.jsx)(n.strong,{children:"stable"})," state within its designated ",(0,s.jsx)(n.code,{children:"launchpad-namespace"}),", such as Ethereum."]}),"\n",(0,s.jsx)(n.p,{children:"The diagram below provides a visual representation illustrating the interdependence and impact of various components and workflows."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"Release Channels Flow",src:a(9967).A+"",width:"960",height:"540"})}),"\n",(0,s.jsxs)(n.h1,{id:"from-new-version-to-launchpad-namespaces-stable",children:["From new version to ",(0,s.jsx)(n.code,{children:"launchpad-namespaces"})," stable"]}),"\n",(0,s.jsxs)(n.p,{children:["Below you can find a more comprehensive breakdown of the process, divided into automated workflows within ",(0,s.jsx)(n.code,{children:"launchpad-charts"})," and ",(0,s.jsx)(n.code,{children:"launchpad-namespaces"}),", as well as manual operator steps. This process guides the transition of a new application version from the initial ",(0,s.jsx)(n.code,{children:"launchpad-charts"})," canary release to its eventual stability within the corresponding ",(0,s.jsx)(n.code,{children:"launchpad-namespaces"}),". For this walkthrough we will use Erigon as an example."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"launchpad-charts"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["On each run, bot looks-up ",(0,s.jsx)(n.a,{href:"https://github.com/ledgerwatch/erigon/tags",children:"Erigon tags"})," and upon finding a new version, opens a PR into ",(0,s.jsxs)(n.a,{href:"https://github.com/graphops/launchpad-charts/pull/133",children:[(0,s.jsx)(n.code,{children:"launchpad-charts/charts/erigon"})," "]})]}),"\n",(0,s.jsxs)(n.li,{children:["The new PR triggers a workflow that publishes a new ",(0,s.jsx)(n.a,{href:"https://github.com/graphops/launchpad-charts/releases/tag/erigon-0.8.1-canary.1",children:(0,s.jsx)(n.code,{children:"pre-release"})})," into the repo."]}),"\n",(0,s.jsxs)(n.li,{children:["Another workflow runs and adds the newly released ",(0,s.jsx)(n.code,{children:"canary"})," chart to the ",(0,s.jsx)(n.code,{children:"canary"})," Helm repo index"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"launchpad-namespaces"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["On each run, bot checks for new chart releases and upon finding one, pushes an update branch and opens a ",(0,s.jsx)(n.a,{href:"https://github.com/graphops/launchpad-namespaces/pull/38",children:"new PR to namespaces"})]}),"\n",(0,s.jsx)(n.li,{children:"Bot runs again, auto-merges the PR and creates a tag"}),"\n",(0,s.jsx)(n.li,{children:"Workflow runs, updates semver tags"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"operator"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Tests the new ",(0,s.jsx)(n.code,{children:"canary"})," chart release to verify it is working properly, if it is adds commit to PR to set the ",(0,s.jsx)(n.code,{children:"stable"})," chart release version. Following the merge of this PR, the new ",(0,s.jsx)(n.code,{children:"stable"})," chart release is automatically issued in draft mode. This step provides the operator with an opportunity to review and manually publish the final release, ensuring precise control and quality assurance in the deployment process."]}),"\n",(0,s.jsxs)(n.li,{children:["Run ",(0,s.jsx)(n.code,{children:"task releases:apply -- eth-sepolia"})," which should pick changes from latest ",(0,s.jsx)(n.code,{children:"ethereum"})," canary tag that would contain new ",(0,s.jsx)(n.code,{children:"erigon"})," canary chart version (after renovate has run and has picked those up, which it does in 15m intervals)."]}),"\n",(0,s.jsxs)(n.li,{children:["If the previous task runs successfully and workloads appear healthy, the operator updates their helmfile reference to ",(0,s.jsx)(n.code,{children:"ethereum-canary/latest"})," for ",(0,s.jsx)(n.code,{children:"eth-mainnet"})," namespace and runs ",(0,s.jsx)(n.code,{children:"task releases:apply -- eth-mainnet"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["If ",(0,s.jsx)(n.code,{children:"task releases:apply -- eth-mainnet"})," succeeds and all workloads are healthy, operator  manually tags the ",(0,s.jsx)(n.code,{children:"ethereum"})," namespace as ",(0,s.jsx)(n.code,{children:"stable"})]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.p,{children:["Manually tagging a namespace as ",(0,s.jsx)(n.code,{children:"stable"})," is an intentional process. Our aim is to ensure that workloads undergo comprehensive testing before being tagged as ",(0,s.jsx)(n.code,{children:"stable"})," which signals to users readiness for running on ",(0,s.jsx)(n.code,{children:"mainnet"}),"."]})}),"\n",(0,s.jsxs)(n.p,{children:["Alongside the ability to choose between ",(0,s.jsx)(n.code,{children:"canary"})," or ",(0,s.jsx)(n.code,{children:"stable"})," releases based on user risk preferences, we've also enabled the capability to manually override a specific chart version during namespace deployment."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'  - path: git::https://github.com/graphops/launchpad-namespaces.git@ethereum/helmfile.yaml?ref=ethereum-canary/latest\n    selectorsInherited: true\n    values:\n      - helmDefaults:\n          <<: *helmDefaults\n        flavor: "sepolia"\n        erigon:\n          chartVersion: "0.8.1" # to override the chart version the namespace is setup with\n          values:\n            statefulNode:\n              jwt:\n                existingSecret:\n                  name: jwt\n                  key: jwt\n        nimbus:\n          values:\n            nimbus:\n              jwt:\n                existingSecret:\n                  name: jwt\n                  key: jwt\n'})}),"\n",(0,s.jsxs)(n.p,{children:["Similarly to being able to override ",(0,s.jsx)(n.code,{children:"chartVersion"}),", users have the ability to override ",(0,s.jsx)(n.code,{children:"chartUrl"})," to specify a self-maintained chart, or a chart maintained by a different organisation."]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},9967:(e,n,a)=>{a.d(n,{A:()=>s});const s=a.p+"assets/images/launchpad-release-channels-a016c97fa21a1eab13467acaeb8b8235.svg"},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>o});var s=a(6540);const t={},r=s.createContext(t);function i(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);