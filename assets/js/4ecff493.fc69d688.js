"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2103],{2748:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>o,contentTitle:()=>t,default:()=>g,frontMatter:()=>i,metadata:()=>d,toc:()=>p});var r=n(4848),s=n(8453);const i={sidebar_position:3},t="Subgraph Upgrade Pre-syncing",d={id:"graphcast/radios/subgraph-radio/subgraph-upgrade-presyncing",title:"Subgraph Upgrade Pre-syncing",description:"The Subgraph Upgrade Pre-sync feature provides a way for Subgraph Developers to signal when they plan on releasing a new subgraph version, thereby allowing Indexers to start syncing the subgraph in advance. Subgraph Developers can use the Graphcast CLI to send a message to all Indexers, interested in the given subgraph.",source:"@site/docs/graphcast/radios/subgraph-radio/subgraph-upgrade-presyncing.md",sourceDirName:"graphcast/radios/subgraph-radio",slug:"/graphcast/radios/subgraph-radio/subgraph-upgrade-presyncing",permalink:"/graphcast/radios/subgraph-radio/subgraph-upgrade-presyncing",draft:!1,unlisted:!1,editUrl:"https://github.com/graphops/docs/edit/main/docs/graphcast/radios/subgraph-radio/subgraph-upgrade-presyncing.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"gnSidebar",previous:{title:"POI Cross-checking",permalink:"/graphcast/radios/subgraph-radio/poi-cross-checking"},next:{title:"Notifications and Monitoring",permalink:"/graphcast/radios/subgraph-radio/monitoring"}},o={},p=[{value:"As an Indexer running Subgraph Radio",id:"as-an-indexer-running-subgraph-radio",level:2},{value:"Rate Limits",id:"rate-limits",level:3},{value:"As a Subgraph Developer",id:"as-a-subgraph-developer",level:2},{value:"Send an Upgrade Intent Message",id:"send-an-upgrade-intent-message",level:3},{value:"Check Indexing Status",id:"check-indexing-status",level:3},{value:"Sequence Diagram",id:"sequence-diagram",level:2}];function c(e){const a={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",mermaid:"mermaid",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"subgraph-upgrade-pre-syncing",children:"Subgraph Upgrade Pre-syncing"})}),"\n",(0,r.jsxs)(a.p,{children:["The Subgraph Upgrade Pre-sync feature provides a way for Subgraph Developers to signal when they plan on releasing a new subgraph version, thereby allowing Indexers to start syncing the subgraph in advance. Subgraph Developers can use the ",(0,r.jsx)(a.a,{href:"https://docs.graphops.xyz/graphcast/radios/graphcast-cli",children:"Graphcast CLI"})," to send a message to all Indexers, interested in the given subgraph."]}),"\n",(0,r.jsx)(a.p,{children:(0,r.jsx)(a.img,{alt:"Upgrade Presyncing",src:n(5811).A+"",width:"960",height:"540"})}),"\n",(0,r.jsx)(a.h2,{id:"as-an-indexer-running-subgraph-radio",children:"As an Indexer running Subgraph Radio"}),"\n",(0,r.jsxs)(a.p,{children:["As long as there is a valid configuration for ",(0,r.jsx)(a.code,{children:"AUTO_UPGRADE"})," and ",(0,r.jsx)(a.code,{children:"INDEXER_MANAGEMENT_SERVER_ENDPOINT"})," (see ",(0,r.jsx)(a.a,{href:"advanced-configuration",children:"Advanced Configuration"}),"), Subgraph Radio will process Upgrade Intent Messages and automatically begin offchain syncing new Subgraph Deployments."]}),"\n",(0,r.jsx)(a.h3,{id:"rate-limits",children:"Rate Limits"}),"\n",(0,r.jsx)(a.p,{children:"In order to prevent spam, Subgraph Radio implements a rate limit on Upgrade Intent Messages. By default, Subgraph Radio will permit one upgrade for an existing Subgraph Deployment per day."}),"\n",(0,r.jsx)(a.h2,{id:"as-a-subgraph-developer",children:"As a Subgraph Developer"}),"\n",(0,r.jsx)(a.h3,{id:"send-an-upgrade-intent-message",children:"Send an Upgrade Intent Message"}),"\n",(0,r.jsxs)(a.p,{children:["Refer to the ",(0,r.jsx)(a.a,{href:"https://docs.graphops.xyz/graphcast/radios/graphcast-cli#usage",children:"usage section"})," of Graphcast CLI to learn more about different ways to send a ",(0,r.jsx)(a.code,{children:"UpgradeIntentMessage"}),", as well as the different configurations options available."]}),"\n",(0,r.jsx)(a.p,{children:"Example:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'docker run ghcr.io/graphops/graphcast-cli \\\n  # pass the address for subgraph deployer\n  --graph-account "0xe9a1cabd57700b17945fd81feefba82340d9568f" \\\n  # pass the pk for the subgraph deployer\n  --private-key "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef" \\\n  # specify we want to send an upgrade presync message\n  upgrade-presync \\\n  # specify the subgraph ID\n  --subgraph-id "CnJMdCkW3pr619gsJVtUPAWxspALPdCMw6o7obzYBNp3" \\\n  # specify the new subgraph deployment hash\n  --new-hash "QmVVfLWowm1xkqc41vcygKNwFUvpsDSMbHdHghxmDVmH9x"\n'})}),"\n",(0,r.jsx)(a.p,{children:"This is what the final log should look like after successfully sending the message:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'INFO graphcast_cli::operator::operation: Sent message, msg_id: "0x126c76b7a5e9a30b3834807e0e02f9858191d153746ae7aebdef90bd4bae9b7a"\n    at src/operator/operation.rs:37\n'})}),"\n",(0,r.jsx)(a.h3,{id:"check-indexing-status",children:"Check Indexing Status"}),"\n",(0,r.jsxs)(a.p,{children:["After sending an ",(0,r.jsx)(a.code,{children:"UpgradeIntentMessage"}),", a Subgraph Developer can periodically check the indexing status of the new subgraph deployment using the public API of the Indexers who actively allocate on the current version of the subgraph."]}),"\n",(0,r.jsxs)(a.p,{children:["Same arguments here can be used as the argument for ",(0,r.jsx)(a.code,{children:"UpgradeIntentMessage"}),". However, ",(0,r.jsx)(a.em,{children:"gossiping"})," is not involved in this operation and the queries are made through deterministic queries."]}),"\n",(0,r.jsx)(a.p,{children:"Command for querying for the indexing status:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-bash",children:'docker run ghcr.io/graphops/graphcast-cli \\\n    --private-key "0x1234567890abcdef1234567890abcdef1234567890abcdef1234567890abcdef" \\\n    --graph-account "0xe9a1cabd57700b17945fd81feefba82340d9568f" \\\n    indexing-status --new-hash "QmVVfLWowm1xkqc41vcygKNwFUvpsDSMbHdHghxmDVmH9x" \\\n    --subgraph-id "CnJMdCkW3pr619gsJVtUPAWxspALPdCMw6o7obzYBNp3"\n'})}),"\n",(0,r.jsx)(a.h2,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,r.jsx)(a.mermaid,{value:"sequenceDiagram\nactor DR as Subgraph A Owner\nparticipant GN as Graphcast Network\nparticipant SIR as Subscribed Indexer Radios\nparticipant IMS as Indexer Management Server\nparticipant ISE as Indexer Status Endpoint\n\nNote over DR: Deploy new Subgraph A version 1\nDR--\x3e>GN: Send upgrade intent message (A-0)\nGN--\x3e>SIR: Broadcast upgrade intent message (A-0)\nactivate SIR\nSIR->>SIR: Trusted source identity verification\ndeactivate SIR\n\nopt Sender identity as Subgraph owner verified\n  opt Auto sync management\n    SIR->>IMS: POST request to initiate off-chain syncing A-1\n    IMS->>SIR: Response from Graph Node\n      SIR->>SIR: Update topics\n      SIR--\x3e>GN: Subscribe to A-1\n  end\n\n  opt Notifications\n    activate SIR\n    SIR->>SIR: Notify events to human\n    deactivate SIR\n  end\nend\n\nDR--\x3eSIR: Switch service from A-0 to A1, deprecate A-0\nSIR--\x3e>GN: Unsubscribe to A-0\n\nloop Periodic Indexing Status Check\n  DR--\x3e>ISE: Request Indexing Status\n  ISE--\x3e>DR: Send Indexing Status\nend"})]})}function g(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},5811:(e,a,n)=>{n.d(a,{A:()=>r});const r=n.p+"assets/images/graphcast-upgrade-presyncing-3e6c8e03a0f87ef555e088d427f0cee3.svg"},8453:(e,a,n)=>{n.d(a,{R:()=>t,x:()=>d});var r=n(6540);const s={},i=r.createContext(s);function t(e){const a=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(i.Provider,{value:a},e.children)}}}]);